// Code generated by protoc-gen-go. DO NOT EDIT.
// source: option.proto

/*
Package protobuf is a generated protocol buffer package.

It is generated from these files:
	option.proto

It has these top-level messages:
	TableOptions
	ColumnOptions
*/
package protobuf

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import google_protobuf "github.com/golang/protobuf/protoc-gen-go/descriptor"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type TableOptions struct {
	// table_name specifies the table name for the message
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
}

func (m *TableOptions) Reset()                    { *m = TableOptions{} }
func (m *TableOptions) String() string            { return proto.CompactTextString(m) }
func (*TableOptions) ProtoMessage()               {}
func (*TableOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *TableOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type ColumnOptions struct {
	// column_name specifies column name
	Name string `protobuf:"bytes,1,opt,name=name" json:"name,omitempty"`
	// type specifies column data type
	Type string `protobuf:"bytes,2,opt,name=type" json:"type,omitempty"`
	// size specifies column size, default 255
	Size int32 `protobuf:"varint,3,opt,name=size" json:"size,omitempty"`
	// primary_key specifies column as primary key
	PrimaryKey bool `protobuf:"varint,4,opt,name=primary_key,json=primaryKey" json:"primary_key,omitempty"`
	// unique specifies column as unique
	Unique bool `protobuf:"varint,5,opt,name=unique" json:"unique,omitempty"`
	// default specifies column default value
	Default string `protobuf:"bytes,6,opt,name=default" json:"default,omitempty"`
	// not_null specifies column as NOT NULL
	NotNull bool `protobuf:"varint,7,opt,name=not_null,json=notNull" json:"not_null,omitempty"`
	// auto_increment specifies column auto incrementable or not
	AutoIncrement bool `protobuf:"varint,8,opt,name=auto_increment,json=autoIncrement" json:"auto_increment,omitempty"`
}

func (m *ColumnOptions) Reset()                    { *m = ColumnOptions{} }
func (m *ColumnOptions) String() string            { return proto.CompactTextString(m) }
func (*ColumnOptions) ProtoMessage()               {}
func (*ColumnOptions) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ColumnOptions) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *ColumnOptions) GetType() string {
	if m != nil {
		return m.Type
	}
	return ""
}

func (m *ColumnOptions) GetSize() int32 {
	if m != nil {
		return m.Size
	}
	return 0
}

func (m *ColumnOptions) GetPrimaryKey() bool {
	if m != nil {
		return m.PrimaryKey
	}
	return false
}

func (m *ColumnOptions) GetUnique() bool {
	if m != nil {
		return m.Unique
	}
	return false
}

func (m *ColumnOptions) GetDefault() string {
	if m != nil {
		return m.Default
	}
	return ""
}

func (m *ColumnOptions) GetNotNull() bool {
	if m != nil {
		return m.NotNull
	}
	return false
}

func (m *ColumnOptions) GetAutoIncrement() bool {
	if m != nil {
		return m.AutoIncrement
	}
	return false
}

var E_Table = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.MessageOptions)(nil),
	ExtensionType: (*TableOptions)(nil),
	Field:         10000001,
	Name:          "ormpb.protobuf.table",
	Tag:           "bytes,10000001,opt,name=table",
	Filename:      "option.proto",
}

var E_Column = &proto.ExtensionDesc{
	ExtendedType:  (*google_protobuf.FieldOptions)(nil),
	ExtensionType: (*ColumnOptions)(nil),
	Field:         10000003,
	Name:          "ormpb.protobuf.column",
	Tag:           "bytes,10000003,opt,name=column",
	Filename:      "option.proto",
}

func init() {
	proto.RegisterType((*TableOptions)(nil), "ormpb.protobuf.TableOptions")
	proto.RegisterType((*ColumnOptions)(nil), "ormpb.protobuf.ColumnOptions")
	proto.RegisterExtension(E_Table)
	proto.RegisterExtension(E_Column)
}

func init() { proto.RegisterFile("option.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 347 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x7c, 0x91, 0x4d, 0x4b, 0xeb, 0x40,
	0x14, 0x86, 0xc9, 0xbd, 0x6d, 0xda, 0x3b, 0xfd, 0x58, 0xcc, 0xe2, 0x32, 0xf7, 0x62, 0x69, 0xa8,
	0x14, 0xba, 0x4a, 0x40, 0x77, 0x5d, 0x2a, 0x08, 0x22, 0x2a, 0x04, 0x51, 0x70, 0x53, 0xf2, 0x71,
	0x9a, 0x0e, 0x4e, 0xe6, 0xc4, 0xc9, 0xcc, 0x22, 0xee, 0xc4, 0xdf, 0xe3, 0x7f, 0x12, 0x7f, 0x89,
	0x64, 0xd2, 0x14, 0xab, 0xe0, 0xee, 0x3d, 0x6f, 0xce, 0x79, 0x12, 0x9e, 0x90, 0x21, 0x16, 0x9a,
	0xa3, 0xf4, 0x0b, 0x85, 0x1a, 0xe9, 0x18, 0x55, 0x5e, 0xc4, 0xcd, 0x10, 0x9b, 0xf5, 0x7f, 0x2f,
	0x43, 0xcc, 0x04, 0x04, 0x6d, 0x11, 0xa4, 0x50, 0x26, 0x8a, 0x17, 0x1a, 0x55, 0xb3, 0x34, 0x9b,
	0x91, 0xe1, 0x4d, 0x14, 0x0b, 0xb8, 0xb6, 0x98, 0x92, 0x52, 0xd2, 0x91, 0x51, 0x0e, 0xcc, 0xf1,
	0x9c, 0xc5, 0x9f, 0xd0, 0xe6, 0xd9, 0x9b, 0x43, 0x46, 0xa7, 0x28, 0x4c, 0x2e, 0x7f, 0xd8, 0xaa,
	0x3b, 0x5d, 0x15, 0xc0, 0x7e, 0x35, 0x5d, 0x9d, 0xeb, 0xae, 0xe4, 0x4f, 0xc0, 0x7e, 0x7b, 0xce,
	0xa2, 0x1b, 0xda, 0x4c, 0xa7, 0x64, 0x50, 0x28, 0x9e, 0x47, 0xaa, 0x5a, 0x3d, 0x40, 0xc5, 0x3a,
	0x9e, 0xb3, 0xe8, 0x87, 0x64, 0x5b, 0x5d, 0x40, 0x45, 0xff, 0x12, 0xd7, 0x48, 0xfe, 0x68, 0x80,
	0x75, 0xed, 0xb3, 0xed, 0x44, 0x19, 0xe9, 0xa5, 0xb0, 0x8e, 0x8c, 0xd0, 0xcc, 0xb5, 0xef, 0x68,
	0x47, 0xfa, 0x8f, 0xf4, 0x25, 0xea, 0x95, 0x34, 0x42, 0xb0, 0x9e, 0xbd, 0xe9, 0x49, 0xd4, 0x57,
	0x46, 0x08, 0x3a, 0x27, 0xe3, 0xc8, 0x68, 0x5c, 0x71, 0x99, 0x28, 0xc8, 0x41, 0x6a, 0xd6, 0xb7,
	0x0b, 0xa3, 0xba, 0x3d, 0x6f, 0xcb, 0xe5, 0x2d, 0xe9, 0xea, 0x5a, 0x03, 0x9d, 0xfa, 0x8d, 0xb2,
	0x9d, 0x43, 0xff, 0x12, 0xca, 0x32, 0xca, 0x5a, 0x41, 0xec, 0xf9, 0xf5, 0xbd, 0xfe, 0xe4, 0xc1,
	0xd1, 0x81, 0xbf, 0x2f, 0xdb, 0xff, 0xec, 0x31, 0x6c, 0x70, 0xcb, 0x3b, 0xe2, 0x26, 0xd6, 0x1c,
	0x9d, 0x7c, 0x03, 0x9f, 0x71, 0x10, 0x69, 0x8b, 0x7d, 0x69, 0xb1, 0x93, 0xaf, 0xd8, 0x3d, 0xf3,
	0xe1, 0x16, 0x77, 0x32, 0xbf, 0x3f, 0xcc, 0xb8, 0xde, 0x98, 0xd8, 0x4f, 0x30, 0x0f, 0x32, 0x2c,
	0x36, 0xa0, 0xca, 0x38, 0x0d, 0xec, 0xf1, 0xee, 0x7f, 0xc7, 0xae, 0x4d, 0xc7, 0x1f, 0x01, 0x00,
	0x00, 0xff, 0xff, 0x52, 0xf2, 0xf0, 0x4b, 0x27, 0x02, 0x00, 0x00,
}
