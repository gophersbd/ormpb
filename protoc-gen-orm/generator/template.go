package generator

import (
	"bytes"
	"text/template"

	"github.com/gophersbd/ormpb/protoc-gen-orm/descriptor"
)

type param struct {
	*descriptor.File
	Imports []descriptor.GoPackage
}

func applyTemplate(p param) (string, error) {
	w := bytes.NewBuffer(nil)
	if err := ormTemplate.Execute(w, p); err != nil {
		return "", err
	}
	return w.String(), nil
}

var (
	ormTemplate = template.Must(template.New("orm").Parse(`
// Code generated by protoc-gen-orm. DO NOT EDIT.
// source: {{.GetName}}

package {{.GoPkg.Name}}

{{range $msg := .Messages}}

func (*{{$msg.Name}}) TableName() string {
	return "{{$msg.TableOption.GetName}}"
}

func (*{{$msg.Name}}) Tag(field, name string) map[string]map[string]string {
	m := map[string]map[string]string{
		{{range $f := $msg.Fields}}
		"{{$f.Name}}": map[string]string{
			{{- if $f.ColumnOption.GetName }}
			"name": "{{$f.ColumnOption.GetName}}",
			{{- end }}
			{{- if $f.ColumnOption.GetType }}
			"type": "{{$f.ColumnOption.GetType}}",
			{{- end }}
		},
		{{end}}
    }
	return m
}
{{end}}

`))
)
